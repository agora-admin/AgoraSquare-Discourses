import { Popover } from "@headlessui/react";
import { TickCircle } from "iconsax-react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useContext, useEffect } from "react";
import ClaimNFTDialog from "../../components/dialogs/ClaimNFTDialog";
import Layout from "../../components/layout/Layout";
import TopBar from "../../components/topbar/TopBar";
import EditProfile from "../../components/user/EditProfile";
import NFTS from "../../components/user/NFTs";
import RecentActivity from "../../components/user/RecentActivity";
import Tabs from "../../components/user/Tabs";
import AppContext from "../../components/utils/AppContext";
import LoadingSpinner from "../../components/utils/LoadingSpinner";
import {TwitterIcon2, WalletIcon,} from "../../components/utils/SvgHub";
import { getProfileImageUrl } from "../../helper/StringHelper";

const ClassString = "min-w-[55px] text-[#7D8B92] text-sm sm:text-sm font-Lexend font-medium";
const SelectedClassString = " flex items-center gap-2 !text-[#D2B4FC]"
const StatNumberClassString = "text-white text-lg sm:text-xl font-Lexend font-semibold"
const StatTextClassString = "text-[#7D8B92] text-[10px] sm:text-xs font-Lexend font-semibold"
const NFTMenuItemCSS = "flex items-center justify-between text-white font-Lexend font-normal text-sm w-full px-4 py-2 rounded-3xl hover:bg-[#212427]";

const UserPage = () => {
    const route = useRouter();
    const [loading, setLoading] = useState(false);
    const [currentTab,setCurrentTab] = useState(0)
    const [activeNFTTab,setActiveNFTTab] = useState("All NFTs");
    const [openClaimNFTDialog,setOpenClaimNFTDialog] = useState(false);

    const { loggedIn, t_handle,t_img,t_name,t_connected, walletAddress,bio,name } = useContext(AppContext);

    useEffect(() => {
        if(!loggedIn || !t_connected){
            route.push('/');
        }
    },[loggedIn,t_connected]);

    if(route.query.userId !== walletAddress){
        route.push('/');
    }

    return (
        <>
            {loggedIn && t_connected && (route.query.userId === walletAddress) && (
                <div className="w-full h-screen">
                    <Head>
                        <title>Discourses | AGORA SQUARE</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/discourse_logo_fav.svg" />
                    </Head>

                    <Layout>
                        <ClaimNFTDialog open={openClaimNFTDialog} setOpen={setOpenClaimNFTDialog} />
                        <TopBar onDiscoursePage={false} />
                        <div className="w-full min-h-screen flex flex-col py-4 sm:py-7 mobile:pb-[90px] gap-4 z-10">
                            {loading ? (
                                <div className="flex-1 flex justify-center items-center">
                                    <LoadingSpinner strokeColor="#ffffff" />
                                </div>
                            ) : (
                                // Main Body
                                <div className="flex flex-col gap-8 sm:gap-14 relative">
                                    {/* User info section */}
                                    <section className="flex flex-col items-center xs2:items-start xs2:flex-row gap-2 xs2:gap-5 sm:gap-8">
                                        <img src={getProfileImageUrl(t_img)} alt="Person profile pic" className="w-24 h-24 sm:w-36 sm:h-36 object-cover rounded-[32px]"/>

                                        {/* Bio Section */}
                                        <div className="w-full xs2:max-w-fit flex flex-col items-center xs2:items-start gap-2">
                                            <div className="flex items-center gap-2">
                                                <h1 className="text-2xl font-Lexend text-white font-semibold">{name ? name : t_name}</h1>
                                                <EditProfile />
                                            </div>
                                            
                                            <div className="flex items-center gap-2">
                                                {/* Twitter handle */}
                                                <a href={`https://www.twitter.com/${t_handle}`} target="_blank" rel="noreferrer" className="flex items-center gap-1">
                                                    <TwitterIcon2 size={26}/>
                                                    <span className="text-[#498CD6] font-medium font-Lexend text-xs">@{t_handle}</span>
                                                </a>

                                                {/* Divider */}
                                                <div className="w-[1.2px] h-4 bg-white/20" />

                                                {/* Wallet Address */}
                                                <div className="flex items-center gap-1">
                                                    <WalletIcon size={23} />
                                                    <span className="text-[#E5F7FF] font-medium font-Lexend text-xs">0xb...8A3</span>
                                                </div>
                                            </div>

                                            {bio && <p className="text-[#E5F7FFE5] font-semibold mobile:text-center text-[13px]">{bio}</p>}

                                            {/* Divider */}
                                            <div className="w-full h-[1.2px] bg-[#1E1E1E]" />

                                            <div className="flex flex-col sm:flex-row items-center gap-3">
                                                {/* Stats */}
                                                <div className="flex items-center gap-6">
                                                    {/* Discourse funded */}
                                                    <div className="flex flex-col items-center">
                                                        <big className={StatNumberClassString}>23</big>
                                                        <small className={StatTextClassString}>discourse funded</small>
                                                    </div>

                                                    {/* No of nfts */}
                                                    <div className="flex flex-col items-center">
                                                        <big className={StatNumberClassString}>04</big>
                                                        <small className={StatTextClassString}>nfts</small>
                                                    </div>

                                                    {/* discourse invitation */}
                                                    <div className="flex flex-col items-center">
                                                        <big className={StatNumberClassString}>26</big>
                                                        <small className={StatTextClassString}>discourse invitation</small>
                                                    </div>
                                                </div>

                                                {/* Divider */}
                                                <div className="mobile:hidden w-[1.5px] h-8 bg-[#1E1E1E]" />

                                                <button onClick={() => setOpenClaimNFTDialog(true)} className="mobile:w-full bg-[#0A0A0A] border-2 border-[#1E1E1E] rounded-2xl text-[#84B9D1] text-xs font-Lexend font-medium px-5 py-3">Claim NFT</button>
                                            </div>
                                        </div>
                                    </section>

                                    {/* NFTs & Recent Activity Section */}
                                    <section className="flex flex-col gap-6">
                                        <div className="flex items-center gap-5">
                                            <button onClick={() => setCurrentTab(0)} className={ClassString+" "+(currentTab == 0 && SelectedClassString)}>
                                                <span className={`py-2 ${currentTab === 0 && "text-border"}`}>NFTs</span>
                                                {
                                                    currentTab === 0 &&  
                                                    <Popover className="relative">
                                                        <Popover.Button className="arrow-down" />

                                                        <Popover.Panel className="shadow-2xl absolute z-20 top-8 -translate-x-[50%] bg-[#0A0A0A] border-2 border-[#1E1E1E] py-2 px-2 min-w-[200px] rounded-3xl">
                                                            <ul className="flex flex-col gap-2">
                                                                <li onClick={() => setActiveNFTTab("All NFTs")} className={NFTMenuItemCSS}>
                                                                    <span className={`${activeNFTTab === "All NFTs" && "text-[#D2B4FC] font-medium"}`}>All NFTs</span>
                                                                    {activeNFTTab === "All NFTs" && <TickCircle variant="Bold" color="#D2B4FC" size={20} />}
                                                                </li>
                                                                <li onClick={() => setActiveNFTTab("Pop NFTs")} className={NFTMenuItemCSS}>
                                                                    <span className={`${activeNFTTab === "Pop NFTs" && "text-[#D2B4FC] font-medium"}`}>Pop NFTs</span>
                                                                    {activeNFTTab === "Pop NFTs" && <TickCircle variant="Bold" color="#D2B4FC" size={20} />}
                                                                </li>
                                                                <li onClick={() => setActiveNFTTab("Following NFTs")} className={NFTMenuItemCSS}>
                                                                    <span className={`${activeNFTTab === "Following NFTs" && "text-[#D2B4FC] font-medium"}`}>Following NFTs</span>
                                                                    {activeNFTTab === "Following NFTs" && <TickCircle variant="Bold" color="#D2B4FC" size={20} />}
                                                                </li>
                                                            </ul>
                                                        </Popover.Panel>
                                                    </Popover>
                                                }
                                            </button>
                                            <button onClick={() => setCurrentTab(1)} className={"py-2 "+ClassString+" "+(currentTab == 1 && SelectedClassString+" text-border")}>Recent Activities</button>
                                        </div>
                                        
                                        {currentTab === 0 ? <NFTS /> : <RecentActivity />}
                                    </section>                                
                                </div>       
                            )}
                        </div>
                    </Layout>
                </div>
            )}
        </>
    );
};

export default UserPage;